// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/core/service/ping.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIPingService is a mock of IPingService interface.
type MockIPingService struct {
	ctrl     *gomock.Controller
	recorder *MockIPingServiceMockRecorder
}

// MockIPingServiceMockRecorder is the mock recorder for MockIPingService.
type MockIPingServiceMockRecorder struct {
	mock *MockIPingService
}

// NewMockIPingService creates a new mock instance.
func NewMockIPingService(ctrl *gomock.Controller) *MockIPingService {
	mock := &MockIPingService{ctrl: ctrl}
	mock.recorder = &MockIPingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIPingService) EXPECT() *MockIPingServiceMockRecorder {
	return m.recorder
}

// Pong mocks base method.
func (m *MockIPingService) Pong() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Pong")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Pong indicates an expected call of Pong.
func (mr *MockIPingServiceMockRecorder) Pong() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Pong", reflect.TypeOf((*MockIPingService)(nil).Pong))
}
